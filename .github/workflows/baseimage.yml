name: Deploy Baseimage

# Will only run on pushes to the docker directory, to prevent a rebuild of the base image on every change.
# We also only build on develop, so that the latest base image is always valid. If you want to verify with  an snapshot image, please push one
# to your local registry and build from there.

on:
  push:
    paths:
      - app/**
      - forwarder/**
      - iot-devices/**
    branches:
      - master
  workflow_dispatch:

jobs:
  build-images:
    runs-on: ubuntu-22.04
    if: ${{ github.repository_owner == 'FIWARE' }}
    steps:
      - uses: actions/checkout@v2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3 
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Login to quay.io
        uses: docker/login-action@v3
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_PASSWORD }}
      - name: Docker meta (FMIS)
        id: meta-fmis
        uses: docker/metadata-action@v5
        with:
          # list of Docker images to use as base name for tags
          images: |
            fiware/tutorials.ngsi-ld:latest
          labels: |
            org.opencontainers.image.title=NGSI-LD Smart Farm
            org.opencontainers.image.description=Node.js express application for the FMIS front-end
      - name: Build and push (FMIS)
        uses: docker/build-push-action@v6
        with:
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            fiware/tutorials.ngsi-ld:latest
            ghcr.io/fiware/tutorials.ngsi-ld:latest
            quay.io/fiware/tutorials.ngsi-ld:latest
          file: app/Dockerfile
          labels: ${{ steps.meta-fmis.outputs.labels }}
      - name: Docker meta (Forwarder)
        id: meta-forwarder
        uses: docker/metadata-action@v5
        with:
          # list of Docker images to use as base name for tags
          images: |
            fiware/tutorials.forwarder:latest
          labels: |
            org.opencontainers.image.title=Proxy Forwarder
            org.opencontainers.image.description=Node.js express application as a dummy data space
      - name: Build and push (Forwarder)
        uses: docker/build-push-action@v6
        with:
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            fiware/tutorials.forwarder:latest
            ghcr.io/fiware/tutorials.forwarder:latest
            quay.io/fiware/tutorials.forwarder:latest
          file: forwarder/Dockerfile
          labels: ${{ steps.meta-forwarder.outputs.labels }}
      - name: Docker meta (IoT Devices)
        id: meta-iot-devices
        uses: docker/metadata-action@v5
        with:
          # list of Docker images to use as base name for tags
          images: |
            fiware/tutorials.iot-devices:latest
            ghcr.io/fiware/tutorials.iot-devices:latest
            quay.io/fiware/tutorials.iot-devices:latest
          labels: |
            org.opencontainers.image.title=Dummy Devices
            org.opencontainers.image.description=Node.js express application sending IoT Data
      - name: Build and push (IoT Devices)
        uses: docker/build-push-action@v6
        with:
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            fiware/tutorials.iot-devices:latest
            ghcr.io/fiware/tutorials.iot-devices:latest
            quay.io/fiware/tutorials.iot-devices:latest
          file: iot-devices/Dockerfile
          labels: ${{ steps.meta-iot-devices.outputs.labels }}
