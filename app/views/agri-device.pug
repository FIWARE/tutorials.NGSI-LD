extends layout

block content
  h1= title

  script(src='https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.22.2/moment.min.js')
  script(src='https://cdn.jsdelivr.net/npm/chart.js@2.7.2/dist/Chart.min.js')
  script(src='https://code.jquery.com/jquery-1.11.1.js')

  div.row
    div.col
      div(class="card m-2")
        div.card-body
          div.container
            div.row
              - if (device.description)
                dt.col-lg-3 Description: 
                dd.col-lg-9 #{device.description}
            div.row
              - if (device.category)
                dt.col-lg-3 Category: 
                dd.col-lg-9
                  code #{device.category.vocab}
            div.row
              - if (device.controlledProperty)
                dt.col-lg-3 Controlled Property: 
                dd.col-lg-9 #{device.controlledProperty}
            div.row
              - if (device.controlledAsset)
                dt.col-lg-3 ControlledAsset: 
                dd.col-lg-9
                  - if (device.controlledAsset.includes('AgriParcel'))
                      a(class="link-underline link-underline-opacity-0" href=`/app/agriparcel/${device.controlledAsset}`) #{device.controlledAsset}
                  - if (device.controlledAsset.includes('Animal'))
                      a(class="link-underline link-underline-opacity-0" href=`/app/animal/${device.controlledAsset}`) #{device.controlledAsset}
                  - if (device.controlledAsset.includes('Building'))
                      a(class="link-underline link-underline-opacity-0" href=`/app/building/${device.controlledAsset}`) #{device.controlledAsset}
            div.row
              - if (device.batteryLevel)
                dt.col-lg-3 Battery Level: 
                dd.col-lg-9 #{device.batteryLevel * 100} %
            div.row
              - if (device.supportedProtocol)
                dt.col-lg-3 Protocol: 
                dd.col-lg-9 #{device.supportedProtocol.toUpperCase()}
            div.row
              - if (device.deviceModel)
                dt.col-lg-3 Device Model: 
                dd.col-lg-9 #{device.deviceModel}
            div.row
              - if (device.location)
                dt.col-lg-3 Location: 
                dd.col-lg-9 #{device.location.coordinates[1]}&deg;N, #{device.location.coordinates[0]}&deg;E

            div.row
              - if (device.status)
                dt.col-lg-3 Status: 
                dd.col-lg-9 #{device.status}

  - if (timeseries)
    div()
      - if (device.heartRate)
        div(style="float: left;")
          h2 Heart Rate
          canvas(id="heartRate" width="800px" height="400px")
      - if (device.humidity)
        div(style="float: left;")
          h2 Humidity
          canvas(id="humidity" width="800px" height="400px")
      - if (device.fillingLevel)
        div(style="float: left;")
          h2 Filling Level
          canvas(id="fillingLevel" width="800px" height="400px")
      - if (device.temperature)
        div(style="float: left;")
          h2 Temperature
          canvas(id="temperature" width="800px" height="400px")
      div(style="clear: both;")

  div.row
    div.col
      div(class="card m-2")
        div.card-body
          summary.list-unstyled Entity (simplified)
            details
              pre #{JSON.stringify(device, null, 4)}

  - if (timeseries)
    div.row
      div.col
        div(class="card m-2")
          div.card-body
            summary.list-unstyled Temporal Entity
              details
                pre #{JSON.stringify(timeseries, null, 4)}


  - if (timeseries)
    script(type='text/javascript').

      var chartData =!{JSON.stringify(chartData)};

      var text = {
        heartRate : "bpm",
        humidity: "%",
        temperature: "C",
        fillingLevel: '%'

      }

      Object.keys(chartData).forEach((key) => {
        var values = chartData[key];
        var ctx = document.getElementById(key);
        var barChart = new Chart(ctx, {
          type: "line",
          data: {
              labels: values.labels,
              datasets: [{
                  fill: false,
                  label: text[key] || '%',
                  data: values.data,
                   backgroundColor : '#45d3dd',
                  borderColor : '#45d3dd',
                  pointRadius : 5
              }]
          },
          options: {
              responsive: false,
              scales: {
                  xAxes: [{
                    ticks: {
                      source: "labels"
                    }
                  }],
                  yAxes: [{
                      ticks: {
                        beginAtZero: true
                      }
                  }]
              }
          }
        });
        var chart = new Chart(ctx, cfg);
      });